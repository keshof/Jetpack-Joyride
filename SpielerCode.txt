/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jetpack.joyride;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.RoundRectangle2D;



/**
 *
 * @author keshav.gireesan
 */
public class Spieler extends GameObject{

public static final double FALLING_VELOCITY = 1.5;

private Shape tranformedPlayerBody = new RoundRectangle2D.Double();

private double fallingVelocity = FALLING_VELOCITY;

private double deltaMovingAngle = 0;
private Color outfitColor = new Color(160, 184, 98);

private int coins = 10;
private boolean paintCoinStatusBar = true;

public Spieler(Coordinate position, double width, double height, double height, double movingAngle, double movingDistance)
{
super(position, width, height);

setMovingAngle(movingAngle);
setMovingDistance(movingDistance);
}

public Shape getTransformedPlayerBody()
{
return transformedPlayerBody;
}

public void set TransformedPlayerBody(Shape transformedPlayerBody)
{
this.transformedPlayerBody = transformedPlayerBody;
}

public double getFallingVelocity()
{
return fallingVelocity;
}

public void setFallingVelocity(double fallingSpeed)
{
this.fallingVelocity = fallingVelocity;
}
public Color getOutfitColor()
{
return outfitColor;
}

public void setOutfitColor(Color outfitColor)
{
this.outfitColor = outfitColor;
}

public int getCoins()
{
return coins;
}

public boolean isPaintCoinStatusBar()
{
return paintCoinStatusBar;
}

public void setPaintCoinStatusBar(boolean paintCoinStatusBar)
{
this.paintCoinStatusBar = paintCoinStatusBar;
}

public void moveDown()
{
deltaMovingAngle = fallingVelocity;
}

public void moveUp()
{
deltaMovingAngle = - fallingVelocity*2.5;
}

public void stopPlayer()
{
setMovingDistance(0);
}

@Override
public boolean touches(GameObject other)
{
Coordinate otherPosition = other.getObjectPosition();
double otherCenterX = otherPosition.getX() + other.getWidth()/2;
double otherCenterY = otherPosition.getY() + other.getHeight()/2;

return getTransformedPlayerBody().contains(OtherCenterX, otherCenterY);
}

@Override
public void makeMove()
{
double newMovingAngle = getMovingAngle() + deltaMovingAngle;
if (newMovingAngle < 0)
{
newMovingAngle = newMovingAngle + 2 * Math.PI;
}

if (newMovingAngle > 2 * Math.PI;
{
newMovingAngle = newMovingAngle - 2 * Math.PI;

}
setMovingAngle(newMovingAngle);
super.makeMove();
}

@Override
public void paintMe(java.awt.Graphics g)
{
Graphics2D g2d = (Graphics2D) g;

if (isPaintCoinStatusBar())
{
paintCoinStatusBars(g2d);
}

paintPlayer(g2d);
}

private void paintTank(Graphics2D g2d)
{
RoundRectangle2D playerBody = new RoundRectangle2D.Double(getObjectPosition().getX() + getWidth()*0,05,
                                                          getObjectPosition().getY(),
                                                          getWidth()*0,9, getHeight(), 15, 8);
}


}


